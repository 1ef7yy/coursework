<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAACWCAYAAACb3McZAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1
        MAAA6mAAADqYAAAXcJy6UTwAAAAJcEhZcwAAA+cAAAPnAcO1/HEAAAAHdElNRQfoAx8SLzkrosktAAAO
        j0lEQVR4Xu2bB6xWRROGsSAo2BAFRQULIqCCYsMOVlREjJSADeyo0VgRewM09i4alS4JYIVEQLFDIoFY
        wAqCHewCgorun2dz1//w3dm518j9CMn7JBP57tnTdvednZk91gpCiCwSiBAOEogQDhKIEA4SiBAOEogQ
        DhKIEA4SiBAOEogQDhKIEA4SiBAOEogQDhKIEA4SiBAOEogQDhKIEA4SiBAOEogQDhKIEA4SiBAOEogQ
        DhKIEA4SiBAOEogQDhKIEA4SiBAOEogQDhKIEA4SiBAOEogQDhKIEA4SiBAOEogQDhKIEA4SiBAOEogQ
        DhKIEA4SiBAOEogQDhKIEA4SiBAOEogQDhKIEA4SiBAOEogQDhKIEA4SiBAOEogQDhKIEA4SiBAOEogQ
        DhKIEA4SiBAOEogQDhKIEA4SiBAOEogQDhKIEA4SiBAOEogQDhKIEA4SiBAOEogQDhKIEA4SiBAONS6Q
        v//+O3z33Xdh3rx54cMPPwxz5swJs2fPDu+991545513ovH7s88+Cz/88EP4888/K84UVfHrr7+GhQsX
        hm+++SZ8/fXX4csvvwyff/55mD9/fuzvTz/9NHzyySfho48++qfv+f3HH39UXGHVsGzZsjiGaTyLxjgv
        WbKkouWaR40LhEHs2rVr2GqrrULjxo3DFltsEa1hw4Zhs802i8bvbbfdNrRt2zYcf/zxYeDAgWHGjBlh
        xYoVFVcRFtdee23YaaedQosWLULz5s3DDjvsELbbbrvYl9tss01o0qRJ7Pctt9wy9v3mm28e9txzzyik
        VckHH3wQ77/pppuGBg0arGRbb711eOuttyparnnUuEB++umnsPvuu4datWr9K0NA559/fvjqq68qriRK
        OfPMM82+86xp06ZxlVmVvP/++9HRWfdbf/31w6uvvlrRcs2jLAJp166d2XnVMVafH3/8seJq1YfVh9Wr
        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
        9fDEOCi8cvqdHA/5DmVgzuM6jE96f8rB9BUJNDkgMX8ySry8bzGcJW9iI4+vb3nX4rtj9Ad5XBHyRb4E
        ZkXg/Ytjkd6L9+CefGfHHtOq+t8RqkuNCwRPR4zKDijenW94+E05k//SyfyN2JzwxOsArkV1JWfJu1YX
        7kdIxq4yH/exWlTlnbhH7t6pnOq1ycFKS7LLRhqfxtBXOBcPchHaM9HoQzb62EvCSZAMI0beByMM4jeW
        9i+AUinjwPtzHZ6jCO9EG84pNWusrPdOlhtb7sFY8P5pLNJ48B7lSMZz1LhAhFiTkUCEcJBAhHCQQIRw
        kECEcJBAhHCQQIRwkECEcJBAhHCQQIRwkECEcJBAhHCQQIRwkECEcJBAhHCQQIRwkECEcJBAhHCQQIRw
        kECEcJBAhHCQQIRwkECEcJBAhHCQQIRwkECEcJBAhHCQQIRwkECEcJBAhHCQQIRwkECEcJBAhHCQQIRw
        kECEcJBAhHCQQIRwkECEcJBAhHCQQIRwkECEcJBAhHCQQIRwkECEcJBAhHCQQIRwkECEcJBAhHCQQIRw
        kECEcJBAhHCQQIRwkECEcJBAhHCQQIRwkECEcJBAhHCQQIRwkECEcJBAhHCQQIRwkECEcJBAhHCQQIRw
        kECEyBLC/wCJkhDnuJK5cQAAAABJRU5ErkJggg==
</value>
  </data>
</root>